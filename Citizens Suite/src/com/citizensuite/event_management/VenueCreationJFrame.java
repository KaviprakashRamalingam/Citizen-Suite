/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.citizensuite.event_management;

import com.citizensuite.directories.CityDirectory;
import com.citizensuite.directories.UserCoordinatesDirectory;
import com.citizensuite.admin.MapJFrame;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import com.citizensuite.model.UserCoordinates;
import com.citizensuite.main.MainJFrame;

/**
 *
 * @author srivi
 */
public class VenueCreationJFrame extends javax.swing.JFrame {

    /**
     * Creates new form VenueCreationJFrame
     */
    UserCoordinates userCoordinates;
    CityDirectory cityDirectory;
    UserCoordinatesDirectory userCoordinatesDirectory;
    String currentUser;

    public VenueCreationJFrame(CityDirectory citydir, String user, UserCoordinatesDirectory usercordDir) {
        initComponents();
        this.currentUser = user;
        this.cityDirectory = citydir;
        this.userCoordinatesDirectory = usercordDir;
        userCoordinates = usercordDir.addNew();
        UsernameGreenTick.setVisible(false);
        UsernameRedTick.setVisible(false);
        UsernameListener();
        populateVenue();
        cordfld.setEditable(false);
    }

    private VenueCreationJFrame() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        namefld = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cordfld = new javax.swing.JTextField();
        LocationLabel = new javax.swing.JLabel();
        locfld = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        SetLocationLabel = new javax.swing.JLabel();
        SubmitButton = new javax.swing.JButton();
        ownerfld = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        UsernameRedTick = new javax.swing.JLabel();
        UsernameGreenTick = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        VenueData = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(namefld, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 333, 225, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(389, 336, -1, -1));
        jPanel1.add(cordfld, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 415, 225, -1));

        LocationLabel.setForeground(new java.awt.Color(255, 255, 255));
        LocationLabel.setText("Location :");
        jPanel1.add(LocationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 377, -1, -1));
        jPanel1.add(locfld, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 374, 225, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Co-Ordinates :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 418, -1, -1));

        SetLocationLabel.setForeground(new java.awt.Color(255, 255, 255));
        SetLocationLabel.setText("Set Location");
        SetLocationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SetLocationLabelMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SetLocationLabelMouseReleased(evt);
            }
        });
        jPanel1.add(SetLocationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(692, 418, -1, -1));

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SubmitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 497, 124, 33));
        jPanel1.add(ownerfld, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 456, 225, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Owner :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 459, -1, -1));

        UsernameRedTick.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citizensuite/assets/icons8-cross-mark-25.png"))); // NOI18N
        jPanel1.add(UsernameRedTick, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 331, -1, -1));

        UsernameGreenTick.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citizensuite/assets/icons8-approval-25.png"))); // NOI18N
        jPanel1.add(UsernameGreenTick, new org.netbeans.lib.awtextra.AbsoluteConstraints(739, 331, -1, -1));

        VenueData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Owner", "Location", "Latitude ", "Longitude", "Status"
            }
        ));
        jScrollPane1.setViewportView(VenueData);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 106, 1066, 154));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citizensuite/assets/icons8-logout-50.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1139, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add Venue Applications");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(408, 27, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citizensuite/assets/frame1.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 640));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String userName, dean, location, cord;

    private void UsernameListener() {
        DocumentListener documentListener = new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
                if (venueNameExists()) {
                    UsernameGreenTick.setVisible(true);
                    UsernameRedTick.setVisible(false);
                } else {
                    UsernameRedTick.setVisible(true);
                    UsernameGreenTick.setVisible(false);
                }
            }

            @Override
            public void insertUpdate(DocumentEvent documentEvent) {

                if (venueNameExists()) {
                    UsernameGreenTick.setVisible(true);
                    UsernameRedTick.setVisible(false);
                } else {
                    UsernameRedTick.setVisible(true);
                    UsernameGreenTick.setVisible(false);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
                if (venueNameExists()) {
                    UsernameGreenTick.setVisible(true);
                    UsernameRedTick.setVisible(false);
                } else {
                    UsernameRedTick.setVisible(true);
                    UsernameGreenTick.setVisible(false);
                }
            }
        };
        namefld.getDocument().addDocumentListener(documentListener);
    }

    private boolean venueNameExists() {
        try {
            ResultSet rs = cityDirectory.getApprovedBuildings();
            while (rs.next()) {
                if (rs.getString("name").equals(namefld.getText())) {
                    return false;
                }
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
        return true;
    }
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

        MainJFrame frame = new MainJFrame();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed

        userName = namefld.getText();
        dean = ownerfld.getText();
        location = locfld.getText();
        userCoordinates.setUsername(userName);
        cityDirectory.addVenue(userName, dean, location, userCoordinates.getLat(), userCoordinates.getLon(), currentUser);
        JOptionPane.showMessageDialog(this, "Added Successfully");
        populateVenue();

        namefld.setText("");
        ownerfld.setText("");
        locfld.setText("");
        cordfld.setText("");
        UsernameGreenTick.setVisible(false);
        UsernameRedTick.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void SetLocationLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetLocationLabelMouseReleased
        MapJFrame frame = new MapJFrame(userCoordinates);
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame.setVisible(true);
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                cordfld.setText(userCoordinates.getLat() + "," + userCoordinates.getLon());
            }
        });
        // TODO add your handling code here:
    }//GEN-LAST:event_SetLocationLabelMouseReleased

    private void SetLocationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetLocationLabelMouseClicked
        MapJFrame frame = new MapJFrame(userCoordinates);
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame.setVisible(true);
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                cordfld.setText(userCoordinates.getLat() + "," + userCoordinates.getLon());
            }
        });
        // TODO add your handling code here:
    }//GEN-LAST:event_SetLocationLabelMouseClicked
    private void populateVenue() {
        DefaultTableModel model = (DefaultTableModel) VenueData.getModel();
        try {
            ResultSet rs = cityDirectory.getVenueData(currentUser);
            model.setRowCount(0);
            Object row[] = new Object[7];
            while (rs.next()) {
                if (rs.getString("type").equals("venue")) {
                    row[0] = rs.getString("application_id");
                    row[1] = rs.getString("name");
                    row[2] = rs.getString("owner");
                    row[3] = rs.getString("location");
                    row[4] = rs.getString("lat");
                    row[5] = rs.getString("lon");
                    row[6] = rs.getString("application_status");
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VenueCreationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VenueCreationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VenueCreationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VenueCreationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VenueCreationJFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LocationLabel;
    private javax.swing.JLabel SetLocationLabel;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel UsernameGreenTick;
    private javax.swing.JLabel UsernameRedTick;
    private javax.swing.JTable VenueData;
    private javax.swing.JTextField cordfld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locfld;
    private javax.swing.JTextField namefld;
    private javax.swing.JTextField ownerfld;
    // End of variables declaration//GEN-END:variables
}
