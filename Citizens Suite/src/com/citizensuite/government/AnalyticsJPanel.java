/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.citizensuite.government;

import com.citizensuite.directories.CensorBoardDirectory;
import com.citizensuite.directories.CityDirectory;
import com.citizensuite.directories.EducationInstituteDirectory;
import com.citizensuite.directories.VenueDirectory;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author kaviprakashramalingam
 */
public class AnalyticsJPanel extends javax.swing.JPanel {
    CityDirectory cityDir;
    CensorBoardDirectory cenDir;
    EducationInstituteDirectory edudir;
    /**
     * Creates new form AnalyticsJPanel
     */
    public AnalyticsJPanel(CityDirectory cityDir, CensorBoardDirectory cenDir, EducationInstituteDirectory edudir) {
        initComponents();
        this.cityDir = cityDir;
        this.cenDir = cenDir;
        this.edudir = edudir;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1137, 703));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setText("City Building approval status");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 214, 54));

        jButton2.setBackground(new java.awt.Color(51, 153, 255));
        jButton2.setText("Censor Applications Analytics");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 320, 214, 54));

        jButton3.setBackground(new java.awt.Color(51, 153, 255));
        jButton3.setText("Course Analytics");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 500, 214, 55));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Analytics Report");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 360, 58));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citizensuite/assets/data-analytics-concept.jpeg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populateAnalytics();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateCensorApplications();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        populateCourseAnalyses();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

private void populateAnalytics() {
    DefaultPieDataset dataset = new DefaultPieDataset();
    dataset.setValue("Approved", cityDir.getApprovedApplicationsCount());
    dataset.setValue("In-review", cityDir.getInReviewApplicationsCount());
    dataset.setValue("Rejected", cityDir.getRejectedApplicationsCount());
        
        JFreeChart chart = ChartFactory.createPieChart("User Insights", dataset, true, true, true);
        
        PiePlot p = (PiePlot)chart.getPlot();
        p.setSectionOutlinesVisible(false);
        p.setLabelFont(new Font("SansSerif", Font.BOLD, 14));
        p.setNoDataMessage("No data available");
        p.setCircular(false);
        p.setLabelGap(0.02);
        
        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(600, 500);
    }

    private void populateCensorApplications() {
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();

    // Assuming you have added the getApplicationCountByStatus method in CensorDirectory
    int activeCount = cenDir.getApplicationCountByStatus("Active");
    int approvedCount = cenDir.getApplicationCountByStatus("Approved");

    dataset.addValue(activeCount, "Count", "Active");
    dataset.addValue(approvedCount, "Count", "Approved");

    JFreeChart chart = ChartFactory.createBarChart(
            "Censor Applications",
            "Status",
            "Count",
            dataset,
            PlotOrientation.VERTICAL,
            true, true, false);

    ChartFrame frame = new ChartFrame("Censor Applications", chart);
    frame.setVisible(true);
    frame.setSize(600, 500);

    }

    private void populateCourseAnalyses() {
           DefaultCategoryDataset dataset = new DefaultCategoryDataset();

    // Assuming you have added the getCoursesByDay method in EducationDirectory
    ResultSet resultSet = edudir.getCoursesByDay();

    try {
        while (resultSet.next()) {
            String dayOfWeek = resultSet.getString("dayofweek");
            int courseCount = resultSet.getInt("course_count");
            dataset.addValue(courseCount, "Courses", dayOfWeek);
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }

    JFreeChart chart = ChartFactory.createBarChart(
            "Day-wise Course Schedule",
            "Day of Week",
            "Number of Courses",
            dataset,
            PlotOrientation.VERTICAL,
            true, true, false);

    ChartFrame frame = new ChartFrame("Day-wise Course Schedule", chart);
    frame.setVisible(true);
    frame.setSize(600, 500);
    }
    }

